components:
  schemas:
    SignUpRequest:
      type: object
      required:
        - username
        - email
        - password
        - tosAgreed
        - marketingAgreed
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        tosAgreed:
          type: boolean
        marketingAgreed:
          type: boolean
    SignUpResponse:
      type: object
      properties:
        confirmed:
          type: boolean
        errorMsg:
          type: string
        codeRequired:
          type: boolean
    SignUpConfirmCodeRequest:
      type: object
      required:
        - username
        - code
      properties:
        username:
          type: string
        code:
          type: string

    SignInRequest:
      type: object
      required:
        - usernameOrEmail
        - password
      properties:
        usernameOrEmail:
          type: string
        password:
          type: string
    # Only zero or one response challenge can be present
    SignInResponse:
      type: object
      required:
        - confirmed
      properties:
        result:
          $ref: '#/components/schemas/AuthResult'
        errorMsg:
          type: string
        challengeTotpCode:
          $ref: '#/components/schemas/ChallengeTotpCode'
        challengePasswordChange:
          $ref: '#/components/schemas/ChallengePasswordChange'
        codeRequired:
          type: boolean
    AuthResult:
      type: object
      required:
        - accessToken
        - refreshToken
        - idToken
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        idToken:
          type: string
    ChallengeTotpCode:
      description: The user has to provide a TOTP code
      type: object
      required:
        - session
        - username
      properties:
        session:
          type: string
        username:
          type: string
    ChallengePasswordChange:
      description: The user has to set a new password
      type: object
      required:
        - session
      properties:
        session:
          type: string
        username:
          type: string
    SignInChallengeTotpCodeRequest:
      type: object
      required:
        - username
        - session
        - code
      properties:
        username:
          type: string
        session:
          type: string
        code:
          type: string
    SignInChallengePasswordChangeRequest:
      type: object
      required:
        - username
        - session
        - newPassword
      properties:
        username:
          type: string
        session:
          type: string
        newPassword:
          type: string
    SignInRefreshTokenRequest:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string
    SignInRefreshTokenResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/AuthResult'

    ApiKey:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
    ApiKeyWithSecret:
      type: object
      required:
        - id
        - name
        - value
      properties:
        id:
          type: string
        name:
          type: string
        secret:
          type: string
    ApiKeys:
      type: object
      required:
        - keys
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/ApiKey'

/sign-up:
  put:
    operationId: signUp
    tags: [ AuthNZ ]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SignUpRequest'
    responses:
      '200':
        description: Ok
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpResponse'
/sign-up/code:
  put:
    operationId: signUpConfirmCode
    tags: [ AuthNZ ]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SignUpConfirmCodeRequest'
    responses:
      '200':
        description: Ok
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpResponse'
/sign-in:
  post:
    operationId: signIn
    tags: [ AuthNZ ]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SignInRequest'
    responses:
      '200':
        description: Ok
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInResponse'
/sign-in/totp:
  post:
    operationId: signInChallengeTotpCode
    tags: [ AuthNZ ]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SignInChallengeTotpCodeRequest'
    responses:
      '200':
        description: Ok
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInResponse'
/sign-in/password-change:
  post:
    operationId: signInChallengePasswordChange
    tags: [ AuthNZ ]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SignInChallengePasswordChangeRequest'
    responses:
      '200':
        description: Ok
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInResponse'
/sign-in/refresh:
  post:
    operationId: signInRefreshToken
    tags: [ AuthNZ ]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SignInRefreshTokenRequest'
    responses:
      '200':
        description: Ok
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInRefreshTokenResponse'

/apikeys:
  post:
    operationId: listApiKeys
    tags: [ AuthNZ ]
    responses:
      '200':
        description: Ok
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeys'
/apikey:
  put:
    operationId: createApiKey
    tags: [ AuthNZ ]
    responses:
      '200':
        description: Ok
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyWithSecret'
/apikey/{apiKeyId}:
  post:
    operationId: getApiKeySecret
    tags: [ AuthNZ ]
    parameters:
      - name: apiKeyId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Ok
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyWithSecret'
  delete:
    operationId: revokeApiKey
    tags: [ AuthNZ ]
    parameters:
      - name: apiKeyId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        $ref: 'common.yaml#/components/responses/Ok'
