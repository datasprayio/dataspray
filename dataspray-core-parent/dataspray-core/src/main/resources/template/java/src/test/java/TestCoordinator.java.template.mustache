package io.dataspray;

{{#util.javaImportsFormat}}
import lombok.SneakyThrows;
{{#processor.generatedOutputStreams}}
{{/processor.generatedOutputStreams}}
import io.dataspray.runner.RawCoordinator;
{{^processor.stringOutputStreams.empty}}
import java.nio.charset.StandardCharsets;
{{/processor.stringOutputStreams.empty}}
{{^processor.jsonOutputStreams.empty}}
import java.nio.charset.StandardCharsets;
{{/processor.jsonOutputStreams.empty}}
{{^processor.avroOutputStreams.empty}}
import java.io.IOException;
import java.io.ByteArrayOutputStream;
{{/processor.avroOutputStreams.empty}}
{{/util.javaImportsFormat}}

public class TestCoordinator implements {{{processor.nameCamelUpper}}}Coordinator {

    private final Coordinator coordinator;

    public {{{processor.nameCamelUpper}}}CoordinatorImpl(Coordinator coordinator) {
        this.coordinator = coordinator;
    }
    {{#processor.outputStreams}}

    @SneakyThrows
    @Override
    public void sendTo{{{uniqueNameCamelUpper}}}({{{dataFormat.nameCamelUpper}}} {{{dataFormat.nameCamelLower}}}) {
        {{#dataFormat.isSerdeAvro}}
        byte[] {{{dataFormat.nameCamelLower}}}Bytes;
        try (ByteArrayOutputStream baos = new ByteArrayOutputStream()) {
            {{{dataFormat.nameCamelUpper}}}.getEncoder().encode({{{dataFormat.nameCamelLower}}}, baos);
            {{{dataFormat.nameCamelLower}}}Bytes = baos.toByteArray();
        }

        {{/dataFormat.isSerdeAvro}}
        coordinator.send(
            {{#dataFormat.isSerdeBinary}}
            {{{dataFormat.nameCamelLower}}},
            {{/dataFormat.isSerdeBinary}}
            {{#dataFormat.isSerdeString}}
            {{{dataFormat.nameCamelLower}}}.getBytes(StandardCharsets.UTF_8),
            {{/dataFormat.isSerdeString}}
            {{#dataFormat.isSerdeJson}}
            gson.toJson({{{dataFormat.nameCamelLower}}}).getBytes(StandardCharsets.UTF_8),
            {{/dataFormat.isSerdeJson}}
            {{#dataFormat.isSerdeProtobuf}}
            {{{nameCamelUpper}}}.toByteArray(),
            {{/dataFormat.isSerdeProtobuf}}
            {{#dataFormat.isSerdeAvro}}
            {{{dataFormat.nameCamelLower}}}Bytes,
            {{/dataFormat.isSerdeAvro}}
            Coordinator.StoreType.KAFKA,
            "{{{storeName}}}",
            "{{{streamName}}}");
    }
    {{/processor.outputStreams}}
}
