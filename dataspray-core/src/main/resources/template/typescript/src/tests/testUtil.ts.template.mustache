{{#processor.endpoint}}
import {
    APIGatewayProxyStructuredResultV2,
    LambdaFunctionURLEvent,
} from 'aws-lambda';
{{/processor.endpoint}}
{{^processor.inputStreams.empty}}
import { Message, StoreType } from "dataspray-runner";
import { Coordinator } from "../coordinator";
import { jest } from '@jest/globals';
import {
{{#processor.jsonInputStreams}}
    {{{dataFormat.nameCamelUpper}}},
{{/processor.jsonInputStreams}}
} from '../streams';
{{/processor.inputStreams.empty}}
{{#processor.endpoint}}

export const mockRequest = (partial: Partial<LambdaFunctionURLEvent>): LambdaFunctionURLEvent => ({
    version: '2.0',
    routeKey: '$default',
    rawPath: '/',
    rawQueryString: '',
    cookies: [
        'cookie',
    ],
    headers: {
        'content-type': 'application/json',
    },
    requestContext: {
        accountId: '123456789012',
        apiId: 'api-id',
        domainName: 'id.execute-api.us-east-1.amazonaws.com',
        domainPrefix: 'id',
        http: {
            method: 'GET',
            path: '/',
            protocol: 'HTTP/1.1',
            sourceIp: '127.0.0.1',
            userAgent: 'agent',
        },
        requestId: 'id',
        routeKey: '$default',
        stage: '$default',
        time: '12/Mar/2020:19:03:58 +0000',
        timeEpoch: 1583348638390,
    },
    isBase64Encoded: false,
    ...partial,
});
{{/processor.endpoint}}
{{^processor.inputStreams.empty}}

export const mockCoordinator: () => Coordinator = () => ({
    {{#processor.outputStreams}}
    sendTo{{{uniqueNameCamelUpper}}}: jest.fn(),
    {{/processor.outputStreams}}
});
{{#processor.inputStreams}}

export const mockMessage{{{uniqueNameCamelUpper}}}: (key: string, data: {{{this.dataFormat.nameCamelUpper}}}) => Message<{{{this.dataFormat.nameCamelUpper}}}> = data => new Message({
        storeType: StoreType.{{{storeType}}},
        storeName: '{{{storeName}}}',
        streamName: '{{{streamName}}}',
        key,
        id: Math.random().toString(36).substring(2)
    }, data,
);
{{/processor.inputStreams}}
{{/processor.inputStreams.empty}}
