import { Processor } from "./autogen/processor";
import {
    {{#processor.web}}
    WebCoordinator,
    {{/processor.web}}
    {{^processor.inputStreams.empty}}
    StreamCoordinator,
    {{/processor.inputStreams.empty}}
} from "./autogen/coordinator";
{{#processor.web}}
import {
    APIGatewayProxyStructuredResultV2,
    LambdaFunctionURLEvent,
} from 'aws-lambda';
{{/processor.web}}
{{^processor.inputStreams.empty}}
import { Message } from "dataspray-runner";
{{/processor.inputStreams.empty}}
{{^processor.jsonInputStreams.empty}}
import {
{{#processor.jsonInputStreams}}
    {{{dataFormat.nameCamelUpper}}},
{{/processor.jsonInputStreams}}
} from './autogen/streams';
{{/processor.jsonInputStreams.empty}}

export class {{{processor.nameCamelUpper}}} extends Processor {
    {{#processor.web}}
    {{^endpoints.empty}}
    {{#endpoints}}

    async web{{{nameCamelUpper}}}(
        {{>web-method-params}}
        coordinator: WebCoordinator
    ): Promise<APIGatewayProxyStructuredResultV2> {
        // TODO
        return { statusCode: 204 };
    }
    {{/endpoints}}
    {{/endpoints.empty}}
    {{#endpoints.empty}}

    async web(
        request: LambdaFunctionURLEvent,
        coordinator: WebCoordinator,
    ): Promise<APIGatewayProxyStructuredResultV2> {
        // TODO
        return { statusCode: 204 };
    }
    {{/endpoints.empty}}
    {{/processor.web}}
    {{#processor.inputStreams}}

    stream{{{uniqueNameCamelUpper}}}(
        message: Message<{{{this.dataFormat.nameCamelUpper}}}>,
        coordinator: StreamCoordinator,
    ): void {
        // TODO
        {{#processor.outputStreams}}
        // coordinator.sendTo{{{uniqueNameCamelUpper}}}({{>stream-sample-data}});
        {{/processor.outputStreams}}
    }
    {{/processor.inputStreams}}
}
