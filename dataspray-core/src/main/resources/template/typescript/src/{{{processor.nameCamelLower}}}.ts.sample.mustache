import { Processor } from "./processor";
{{#processor.endpoint}}
import {
    APIGatewayProxyStructuredResultV2,
    LambdaFunctionURLEvent,
} from 'aws-lambda';
{{/processor.endpoint}}
{{^processor.inputStreams.empty}}
import { Message } from "dataspray-runner";
import { Coordinator } from "./coordinator";
{{/processor.inputStreams.empty}}
{{^processor.jsonInputStreams.empty}}
import {
{{#processor.jsonInputStreams}}
    {{{dataFormat.nameCamelUpper}}},
{{/processor.jsonInputStreams}}
} from './streams';
{{/processor.jsonInputStreams.empty}}

export class {{{processor.nameCamelUpper}}} implements Processor {
    {{#processor.endpoint}}

    async handleWebRequest(request: LambdaFunctionURLEvent): Promise<APIGatewayProxyStructuredResultV2> {

        // TODO
        return { statusCode: 200 };
    }
    {{/processor.endpoint}}
    {{#processor.inputStreams}}

    process{{{uniqueNameCamelUpper}}}(message: Message<{{{this.dataFormat.nameCamelUpper}}}>, coordinator: Coordinator): void {

        // TODO
        {{#processor.outputStreams}}
        //coordinator.sendTo{{{uniqueNameCamelUpper}}}({{>./stream-sample-data}});
        {{/processor.outputStreams}}
    }
    {{/processor.inputStreams}}
}
