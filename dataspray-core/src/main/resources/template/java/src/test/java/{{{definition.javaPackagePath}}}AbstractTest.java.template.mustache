package {{{definition.javaPackage}}};

{{#util.javaImportsFormat}}
import org.junit.Before;
import io.dataspray.runner.StoreType;
import java.util.UUID;
{{/util.javaImportsFormat}}

public class AbstractTest {

    protected Processor processor;
    protected TestCoordinator coordinator;

    @Before
    public void initializeAbstractTest() {
        processor = new {{{processor.nameCamelUpper}}}();
        coordinator = new TestCoordinator();
    }
    {{#processor.inputStreams}}

    public TestMessage<{{{dataFormat.nameCamelUpper}}}> createMessage{{{dataFormat.nameCamelUpper}}}(String messageKey, {{{dataFormat.nameCamelUpper}}} {{{dataFormat.nameCamelLower}}}) {
        return new TestMessage<>(StoreType.{{{storeType.name}}}, "{{{storeName}}}", "{{{streamName}}}", messageKey, UUID.randomUUID().toString(), {{{dataFormat.nameCamelLower}}});
    }
    {{/processor.inputStreams}}
}
