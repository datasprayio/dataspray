package {{{definition.javaPackage}}};

{{#util.javaImportsFormat}}
import org.junit.Test;
{{^processor.inputStreams.empty}}
import org.mockito.Mockito;
{{/processor.inputStreams.empty}}
{{#processor.endpoint}}
import org.junit.Assert;
import io.dataspray.runner.dto.web.MockHttpRequest;
import io.dataspray.runner.dto.web.HttpResponse;
{{/processor.endpoint}}
{{/util.javaImportsFormat}}

public class {{{processor.nameCamelUpper}}}Test extends AbstractTest {
    {{#processor.endpoint}}

    @Test(timeout = 10_000)
    public void testWebRequest() {

        HttpResponse response = processor.handleWebRequest(
                MockHttpRequest.builder()
                        .method("GET")
                        .path("/")
                        .bodyAsString("ping")
                        .build(),
                HttpResponse.builder());

        Assert.assertEquals(204, response.getStatusCode());
    }
    {{/processor.endpoint}}
    {{#processor.inputStreams}}

    @Test(timeout = 10_000)
    public void test{{{uniqueNameCamelUpper}}}() {

        TestCoordinator coordinator = process{{{uniqueNameCamelUpper}}}("messageKey", {{>../../stream-test-data}}, "messageId"){{#processor.outputStreams}}
                .assertSentNone{{{dataFormat.nameCamelUpper}}}(){{/processor.outputStreams}};
    }
    {{/processor.inputStreams}}
}
