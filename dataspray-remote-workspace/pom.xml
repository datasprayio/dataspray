<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2024 Matus Faro
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all
  ~ copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~ SOFTWARE.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>dataspray-parent</artifactId>
        <groupId>io.dataspray</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <artifactId>dataspray-remote-workspace</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>DataSpray Remote Workspace</name>
    <url>https://dataspray.io</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>lambda</artifactId>
        </dependency>
        <dependency>
            <groupId>software.amazon.awscdk</groupId>
            <artifactId>aws-cdk-lib</artifactId>
        </dependency>
        <dependency>
            <groupId>software.constructs</groupId>
            <artifactId>constructs</artifactId>
            <version>10.1.56</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>regex-property</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>project.version-pep440</name>
                            <value>${parent.version}</value>
                            <regex>-</regex>
                            <replacement>+</replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>${project.basedir}/src/main/client</directory>
                                    <includes>
                                        <include>src/api/apis/**</include>
                                        <include>src/api/models/**</include>
                                        <include>src/api/index.ts</include>
                                        <include>src/api/runtime.ts</include>
                                    </includes>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                                <fileset>
                                    <directory>${project.basedir}/src/main/server</directory>
                                    <includes>
                                        <include>.pytest_cache/**</include>
                                        <include>dist/**</include>
                                        <include>src/dataspray/apis/**/*</include>
                                        <include>src/dataspray/models/**/*</include>
                                        <include>src/dataspray/main.py</include>
                                        <include>pyproject.toml</include>
                                    </includes>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-frontend</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/openapi/api.yaml</inputSpec>
                            <output>${project.build.directory}/generated-sources/frontend</output>
                            <generatorName>typescript-fetch</generatorName>
                            <templateDirectory>${project.basedir}/src/main/openapi/template/typescript-fetch
                            </templateDirectory>
                            <additionalProperties>typescriptThreePlus=true
                                ,supportsES6=true
                                ,enumPropertyNaming=original
                            </additionalProperties>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-backend</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/openapi/api.yaml</inputSpec>
                            <output>${project.build.directory}/generated-sources/backend</output>
                            <generatorName>python-fastapi</generatorName>
                            <templateDirectory>${project.basedir}/src/main/openapi/template/python-fastapi
                            </templateDirectory>
                            <additionalProperties>packageName=dataspray,packageVersion=${project.version-pep440}
                            </additionalProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources-frontend</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/generated-sources/frontend</directory>
                                    <filtering>false</filtering>
                                    <includes>
                                        <include>apis/**/*</include>
                                        <include>models/**/*</include>
                                        <include>index.ts</include>
                                        <include>runtime.ts</include>
                                    </includes>
                                </resource>
                            </resources>
                            <outputDirectory>${project.basedir}/src/main/client/src/api</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-resources-backend</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/generated-sources/backend</directory>
                                    <filtering>false</filtering>
                                    <includes>
                                        <include>src/dataspray/apis/**/*</include>
                                        <include>src/dataspray/models/**/*</include>
                                        <include>src/dataspray/main.py</include>
                                        <include>pyproject.toml</include>
                                    </includes>
                                </resource>
                            </resources>
                            <outputDirectory>${project.basedir}/src/main/server</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>backend-install</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <workingDirectory>${project.basedir}/src/main/server</workingDirectory>
                            <executable>pip3</executable>
                            <arguments>
                                <argument>install</argument>
                                <argument>--requirement=requirements.txt</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>backend-install-test</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <workingDirectory>${project.basedir}/src/main/server</workingDirectory>
                            <executable>pip3</executable>
                            <arguments>
                                <argument>install</argument>
                                <argument>pytest</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>backend-run-tests</id>
                        <phase>test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <workingDirectory>${project.basedir}/src/main/server</workingDirectory>
                            <executable>pytest</executable>
                            <arguments>
                                <argument>tests</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>backend-build</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <workingDirectory>${project.basedir}/src/main/server</workingDirectory>
                            <executable>python3</executable>
                            <arguments>
                                <argument>-m</argument>
                                <argument>build</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.coderplus.maven.plugins</groupId>
                <artifactId>copy-rename-maven-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <id>copy-server-deps</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <sourceFile>${project.basedir}/src/main/server/requirements.txt</sourceFile>
                            <destinationFile>${project.build.directory}/docker-root/requirements.txt</destinationFile>
                            <overWrite>true</overWrite>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-server-dataspray</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <sourceFile>
                                ${project.basedir}/src/main/server/dist/dataspray-${project.version-pep440}-py3-none-any.whl
                            </sourceFile>
                            <destinationFile>
                                ${project.build.directory}/docker-root/dataspray-${project.version-pep440}-py3-none-any.whl
                            </destinationFile>
                            <overWrite>true</overWrite>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.36.1</version>
                <configuration>
                    <verbose>true</verbose>
                </configuration>
                <executions>
                    <execution>
                        <id>build</id>
                        <phase>install</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <images>
                                <image>
                                    <name>dataspray/dev-env-lambda</name>
                                    <build>
                                        <contextDir>${project.build.directory}/docker-root</contextDir>
                                        <dockerFile>${basedir}/src/main/container/Dockerfile</dockerFile>
                                        <filter>@</filter>
                                        <tags>
                                            <tag>latest</tag>
                                            <tag>${parent.version}</tag>
                                        </tags>
                                        <args>
                                            <PROJECT_VERSION>${project.version-pep440}</PROJECT_VERSION>
                                        </args>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>io.dataspray.devenv.CdkEntrypoint</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <descriptors>
                        <descriptor>${project.basedir}/src/main/assembly/openapi.xml</descriptor>
                        <descriptor>${project.basedir}/src/main/assembly/frontend.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
