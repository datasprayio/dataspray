<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2024 Matus Faro
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all
  ~ copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~ SOFTWARE.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.dataspray</groupId>
    <artifactId>dataspray-parent</artifactId>
    <version>0.0.1</version>
    <packaging>pom</packaging>

    <name>DataSpray Parent</name>
    <description>Stream processing developer toolkit</description>
    <url>https://dataspray.io</url>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Matus Faro</name>
            <email>matus@dataspray.io</email>
        </developer>
    </developers>

    <properties>
        <java.version>21</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <junit.version>5.8.2</junit.version>
        <projectlombok.version>1.18.36</projectlombok.version>
        <!-- If changed, update aws.sdk.version -->
        <quarkus.version>3.15.1</quarkus.version>
        <aws.sdk.version>2.21.29</aws.sdk.version>
        <!-- If changed, also change in .nvmrc and in site modules -->
        <node.version>v20.11.0</node.version>
        <pnpm.version>v8.6.10</pnpm.version>
        <slf4j.version>2.0.7</slf4j.version>
        <logback.version>1.2.9</logback.version>
        <jackson.version>2.18.1</jackson.version>
        <jsonschema-generator.version>4.36.0</jsonschema-generator.version>
        <!--
            Keep in sync with cdk version used in aws-cdk-maven-plugin (aws.cdk.4j.version)
            https://github.com/datasprayio/aws-cdk-4j/blob/master/pom.xml#L55
            And also with cdk version used in open-next-cdk or nextjs-export-cdk whichever is used at the moment:
            https://github.com/datasprayio/open-next-cdk/blob/main/.projenrc.js#L21
            https://github.com/datasprayio/nextjs-export-cdk/blob/main/.projenrc.ts#L6
        -->
        <aws.cdk.version>2.134.0</aws.cdk.version>
        <aws.cdk.4j.version>2.2.6</aws.cdk.4j.version>
        <sqlite4java>1.0.392</sqlite4java>
        <okhttp.version>4.12.0</okhttp.version>

        <lambda-native.phase>package</lambda-native.phase>
        <lambda-native.container-build>false</lambda-native.container-build>
        <lambda-native-it.phase>none</lambda-native-it.phase>
        <lambda-native-it.finalName>${project.build.finalName}-it</lambda-native-it.finalName>
        <failsafe.native-image-path>${project.build.directory}/${project.build.finalName}-runner
        </failsafe.native-image-path>

        <skipTests/>
        <skipITs/>
        <argLine/>
    </properties>

    <modules>
        <module>dataspray-common</module>
        <module>dataspray-common-test</module>
        <module>dataspray-resources</module>
        <module>dataspray-lambda-web-test</module>
        <module>dataspray-lambda-web</module>
        <module>dataspray-api-parent</module>
        <module>dataspray-runner-parent</module>
        <module>dataspray-core</module>
        <module>dataspray-cli</module>
        <module>dataspray-store</module>
        <module>dataspray-authorizer</module>
        <module>dataspray-stream-control</module>
        <module>dataspray-stream-ingest</module>
        <module>dataspray-site-parent</module>
        <module>dataspray-package</module>
    </modules>

    <scm>
        <url>git@github.com:datasprayio/dataspray.git</url>
        <connection>scm:git:git@github.com:datasprayio/dataspray.git</connection>
        <developerConnection>scm:git:git@github.com:datasprayio/dataspray.git</developerConnection>
    </scm>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>dynamodb-local-oregon</id>
            <name>DynamoDB Local Release Repository</name>
            <url>https://s3-us-west-2.amazonaws.com/dynamodb-local/release</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.dataspray</groupId>
                <artifactId>dataspray-common</artifactId>
                <version>0.0.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>io.dataspray</groupId>
                <artifactId>dataspray-common-test</artifactId>
                <version>0.0.1-SNAPSHOT</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.dataspray</groupId>
                <artifactId>dataspray-lambda-web-test</artifactId>
                <version>0.0.1-SNAPSHOT</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.dataspray</groupId>
                <artifactId>dataspray-site-dashboard</artifactId>
                <classifier>open-next</classifier>
                <version>0.0.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>io.dataspray</groupId>
                <artifactId>dataspray-resources</artifactId>
                <version>0.0.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>io.dataspray</groupId>
                <artifactId>dataspray-client</artifactId>
                <version>0.0.2</version>
            </dependency>
            <dependency>
                <groupId>io.dataspray</groupId>
                <artifactId>dataspray-stream-control</artifactId>
                <version>0.0.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>io.dataspray</groupId>
                <artifactId>dataspray-stream-ingest</artifactId>
                <version>0.0.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>io.dataspray</groupId>
                <artifactId>dataspray-core</artifactId>
                <version>0.0.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>io.dataspray</groupId>
                <artifactId>dataspray-lambda-web</artifactId>
                <version>0.0.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>io.dataspray</groupId>
                <artifactId>dataspray-store</artifactId>
                <version>0.0.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>io.dataspray</groupId>
                <artifactId>dataspray-api</artifactId>
                <version>0.0.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>io.dataspray</groupId>
                <artifactId>dataspray-authorizer</artifactId>
                <version>0.0.1-SNAPSHOT</version>
            </dependency>

            <dependency>
                <groupId>io.dataspray</groupId>
                <artifactId>single-table</artifactId>
                <version>2.4.0</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>33.3.1-jre</version>
            </dependency>
            <dependency>
                <groupId>com.github.rholder</groupId>
                <artifactId>guava-retrying</artifactId>
                <version>2.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-lambda-java-events</artifactId>
                <!-- If changed, also update in pom-parent.xml.template.mustache -->
                <version>3.11.1</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${projectlombok.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>2.10.1</version>
            </dependency>
            <dependency>
                <groupId>io.gsonfire</groupId>
                <artifactId>gson-fire</artifactId>
                <version>1.8.5</version>
            </dependency>
            <dependency>
                <groupId>com.dampcake</groupId>
                <artifactId>gson-immutable</artifactId>
                <version>1.2</version>
            </dependency>
            <dependency>
                <groupId>jakarta.ws.rs</groupId>
                <artifactId>jakarta.ws.rs-api</artifactId>
                <version>3.1.0</version>
            </dependency>
            <dependency>
                <groupId>jakarta.validation</groupId>
                <artifactId>jakarta.validation-api</artifactId>
                <version>3.0.0</version>
            </dependency>
            <dependency>
                <groupId>jakarta.mail</groupId>
                <artifactId>jakarta.mail-api</artifactId>
                <version>2.1.2</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>1.6.5</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>3.0.2</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>logging-interceptor</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.annotation</groupId>
                <artifactId>jakarta.annotation-api</artifactId>
                <version>3.0.0</version>
            </dependency>
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>1.3.2</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-server</artifactId>
                <version>3.0.5</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-configuration2</artifactId>
                <version>2.8.0</version>
            </dependency>
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>1.5.0</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>2.12.5</version>
            </dependency>

            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>4.4.0</version>
            </dependency>
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>jwks-rsa</artifactId>
                <version>0.22.1</version>
            </dependency>

            <dependency>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-bom</artifactId>
                <version>${quarkus.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.quarkus.platform</groupId>
                <artifactId>quarkus-amazon-services-bom</artifactId>
                <version>${quarkus.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.quarkiverse.logging.logback</groupId>
                <artifactId>quarkus-logging-logback</artifactId>
                <version>1.1.2</version>
            </dependency>

            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>${aws.sdk.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>software.amazon.awscdk</groupId>
                <artifactId>aws-cdk-lib</artifactId>
                <version>${aws.cdk.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awscdk</groupId>
                <artifactId>kinesisfirehose-alpha</artifactId>
                <version>${aws.cdk.version}-alpha.0</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awscdk</groupId>
                <artifactId>kinesisfirehose-destinations-alpha</artifactId>
                <version>${aws.cdk.version}-alpha.0</version>
            </dependency>
            <dependency>
                <groupId>software.constructs</groupId>
                <artifactId>constructs</artifactId>
                <version>10.1.56</version>
            </dependency>
            <dependency>
                <groupId>io.dataspray</groupId>
                <artifactId>open-next-cdk</artifactId>
                <version>0.0.10</version>
            </dependency>
            <dependency>
                <groupId>io.dataspray</groupId>
                <artifactId>next-export-cdk</artifactId>
                <version>0.0.2</version>
            </dependency>

            <dependency>
                <groupId>info.picocli</groupId>
                <artifactId>picocli-spring-boot-starter</artifactId>
                <version>4.6.3</version>
            </dependency>
            <dependency>
                <groupId>com.github.victools</groupId>
                <artifactId>jsonschema-generator</artifactId>
                <version>${jsonschema-generator.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.victools</groupId>
                <artifactId>jsonschema-module-jackson</artifactId>
                <version>${jsonschema-generator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jgit</groupId>
                <artifactId>org.eclipse.jgit</artifactId>
                <version>7.0.0.202409031743-r</version>
            </dependency>
            <dependency>
                <groupId>com.samskivert</groupId>
                <artifactId>jmustache</artifactId>
                <version>1.15</version>
            </dependency>
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>2.3</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.11.0</version>
            </dependency>
            <dependency>
                <groupId>com.jcabi</groupId>
                <artifactId>jcabi-aspects</artifactId>
                <version>0.23.2</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.openapitools</groupId>
                <artifactId>jackson-databind-nullable</artifactId>
                <version>0.2.6</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-resolver-dns-native-macos</artifactId>
                <version>4.1.100.Final</version>
                <scope>runtime</scope>
                <classifier>osx-x86_64</classifier>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>5.2.0</version>
            </dependency>
            <dependency>
                <groupId>org.junit.vintage</groupId>
                <artifactId>junit-vintage-engine</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.version}</version>
            </dependency>

            <dependency>
                <groupId>io.findify</groupId>
                <artifactId>s3mock_2.13</artifactId>
                <version>0.2.6</version>
            </dependency>
            <dependency>
                <groupId>com.adobe.testing</groupId>
                <artifactId>s3mock-testcontainers</artifactId>
                <!-- If changing, also bump Docker image version in MockS3Client.java -->
                <version>2.17.0</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>DynamoDBLocal</artifactId>
                <!-- Find latest version here: https://hub.docker.com/r/amazon/dynamodb-local/tags -->
                <version>2.5.3</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>2.17.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>2.17.1</version>
            </dependency>
            <dependency>
                <groupId>com.almworks.sqlite4java</groupId>
                <artifactId>sqlite4java</artifactId>
                <version>${sqlite4java}</version>
            </dependency>
            <dependency>
                <groupId>com.almworks.sqlite4java</groupId>
                <artifactId>sqlite4java-win32-x86</artifactId>
                <version>${sqlite4java}</version>
                <type>dll</type>
            </dependency>
            <dependency>
                <groupId>com.almworks.sqlite4java</groupId>
                <artifactId>sqlite4java-win32-x64</artifactId>
                <version>${sqlite4java}</version>
                <type>dll</type>
            </dependency>
            <dependency>
                <groupId>com.almworks.sqlite4java</groupId>
                <artifactId>libsqlite4java-osx</artifactId>
                <version>${sqlite4java}</version>
                <type>dylib</type>
            </dependency>
            <dependency>
                <groupId>com.almworks.sqlite4java</groupId>
                <artifactId>libsqlite4java-linux-i386</artifactId>
                <version>${sqlite4java}</version>
                <type>so</type>
            </dependency>
            <dependency>
                <groupId>com.almworks.sqlite4java</groupId>
                <artifactId>libsqlite4java-linux-amd64</artifactId>
                <version>${sqlite4java}</version>
                <type>so</type>
            </dependency>

            <dependency>
                <groupId>io.dataspray</groupId>
                <artifactId>aws-cdk</artifactId>
                <version>${aws.cdk.4j.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-general</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <!-- Allows to fetch package version using getClass().getPackage().getImplementationVersion() -->
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <addClasspath>true</addClasspath>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- Publishing -->
            <plugin>
                <groupId>org.honton.chas</groupId>
                <artifactId>exists-maven-plugin</artifactId>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <id>check-if-exists</id>
                        <goals>
                            <goal>remote</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <property>skipDeployParentJava</property>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <inherited>false</inherited>
                <configuration>
                    <source>${maven.compiler.source}</source>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>${skipDeployParentJava}</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <configuration>
                    <!-- Defferring which effectively disables -->
                    <skipNexusStagingDeployMojo>${skipDeployParentJava}</skipNexusStagingDeployMojo>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.dataspray</groupId>
                    <artifactId>aws-cdk-maven-plugin</artifactId>
                    <version>${aws.cdk.4j.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>1.13.4</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.6.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>appassembler-maven-plugin</artifactId>
                    <version>2.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.5.2</version>
                    <configuration>
                        <argLine>@{argLine} -Xmx1024m</argLine>
                        <parallel>classesAndMethods</parallel>
                        <threadCount>1</threadCount>
                        <perCoreThreadCount>true</perCoreThreadCount>
                        <trimStackTrace>false</trimStackTrace>
                        <useFile>false</useFile>
                        <systemPropertyVariables>
                            <quarkus.test.arg-line>
                                -agentlib:native-image-agent=trace-output=${project.build.directory}/native-image-agent-trace.json
                            </quarkus.test.arg-line>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>3.3.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.5.2</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <trimStackTrace>false</trimStackTrace>
                        <useFile>false</useFile>
                        <systemPropertyVariables>
                            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                            <native.image.path>${failsafe.native-image-path}</native.image.path>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                        <verbose>true</verbose>
                        <forceJavacCompilerUse>true</forceJavacCompilerUse>
                        <fork>true</fork>
                        <annotationProcessors>
                            <annotationProcessor>lombok.launch.AnnotationProcessorHider$AnnotationProcessor
                            </annotationProcessor>
                        </annotationProcessors>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${projectlombok.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jreleaser</groupId>
                    <artifactId>jreleaser-maven-plugin</artifactId>
                    <version>1.15.0</version>
                </plugin>
                <plugin>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-maven-plugin</artifactId>
                    <version>${quarkus.version}</version>
                    <configuration>
                        <javaVersion>${java.version}</javaVersion>
                    </configuration>
                    <executions>
                        <execution>
                            <!-- Build a Quarkus CLI -->
                            <id>cli</id>
                            <phase>none</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                        <execution>
                            <!-- Lambda native image -->
                            <id>lambda-native</id>
                            <phase>none</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                            <configuration>
                                <systemProperties>
                                    <quarkus.native.container-build>${lambda-native.container-build}
                                    </quarkus.native.container-build>
                                </systemProperties>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- Lambda native image for testing only -->
                            <!-- In case the lambda-native is cross-compiled, using this to run ITs -->
                            <id>lambda-native-it</id>
                            <phase>none</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                            <configuration>
                                <skip>${skipITs}${skipTests}</skip>
                                <finalName>${lambda-native-it.finalName}</finalName>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.skife.maven</groupId>
                    <artifactId>really-executable-jar-maven-plugin</artifactId>
                    <version>1.5.0</version>
                </plugin>
                <plugin>
                    <groupId>org.openapitools</groupId>
                    <artifactId>openapi-generator-maven-plugin</artifactId>
                    <version>7.2.0</version>
                </plugin>
                <plugin>
                    <!-- Skipping default deploy plugin in lieu of nexus-staging-maven-plugin -->
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.0.0-M2</version>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>

                <!-- Publishing -->
                <plugin>
                    <groupId>org.honton.chas</groupId>
                    <artifactId>exists-maven-plugin</artifactId>
                    <version>0.14.0</version>
                    <configuration>
                        <repository>https://s01.oss.sonatype.org/service/local/repositories/releases/content/
                        </repository>
                        <requireGoal>deploy</requireGoal>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.6.3</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>3.1.0</version>
                    <configuration>
                        <gpgArguments>
                            <arg>--pinentry-mode</arg>
                            <arg>loopback</arg>
                        </gpgArguments>
                        <passphrase>${env.GPG_PASSPHRASE}</passphrase>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>1.7.0</version>
                    <extensions>true</extensions>
                    <configuration>
                        <skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
                        <serverId>ossrh</serverId>
                        <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                        <autoReleaseAfterClose>true</autoReleaseAfterClose>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <!-- For now, allow staging/production to deploy non-native JVM -->
        <!--        <profile>-->
        <!--            <id>production</id>-->
        <!--            <build>-->
        <!--                <plugins>-->
        <!--                    <plugin>-->
        <!--                        <groupId>org.apache.maven.plugins</groupId>-->
        <!--                        <artifactId>maven-enforcer-plugin</artifactId>-->
        <!--                        <executions>-->
        <!--                            <execution>-->
        <!--                                <id>enforce-production</id>-->
        <!--                                <goals>-->
        <!--                                    <goal>enforce</goal>-->
        <!--                                </goals>-->
        <!--                                <configuration>-->
        <!--                                    <rules>-->
        <!--                                        <requireActiveProfile>-->
        <!--                                            <profiles>native</profiles>-->
        <!--                                        </requireActiveProfile>-->
        <!--                                    </rules>-->
        <!--                                </configuration>-->
        <!--                            </execution>-->
        <!--                        </executions>-->
        <!--                    </plugin>-->
        <!--                </plugins>-->
        <!--            </build>-->
        <!--        </profile>-->
        <!--        <profile>-->
        <!--            <id>staging</id>-->
        <!--            <build>-->
        <!--                <plugins>-->
        <!--                    <plugin>-->
        <!--                        <groupId>org.apache.maven.plugins</groupId>-->
        <!--                        <artifactId>maven-enforcer-plugin</artifactId>-->
        <!--                        <executions>-->
        <!--                            <execution>-->
        <!--                                <id>enforce-staging</id>-->
        <!--                                <goals>-->
        <!--                                    <goal>enforce</goal>-->
        <!--                                </goals>-->
        <!--                                <configuration>-->
        <!--                                    <rules>-->
        <!--                                        <requireActiveProfile>-->
        <!--                                            <profiles>native</profiles>-->
        <!--                                        </requireActiveProfile>-->
        <!--                                    </rules>-->
        <!--                                </configuration>-->
        <!--                            </execution>-->
        <!--                        </executions>-->
        <!--                    </plugin>-->
        <!--                </plugins>-->
        <!--            </build>-->
        <!--        </profile>-->
        <profile>
            <id>selfhost</id>
        </profile>

        <profile>
            <id>native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-native</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireJavaVendor>
                                            <includes>
                                                <include>GraalVM Community</include>
                                            </includes>
                                        </requireJavaVendor>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>macos</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <!--
                    On MacOS, we need to build a linux executable rather than Mach-O
                    in order to deploy it to AWS Lambda.
                    https://quarkus.io/guides/maven-tooling#build-a-container-friendly-executable

                    This means our integration tests will fail as it can't run Mach-O.
                    https://github.com/quarkusio/quarkus/issues/24860

                    Instead let's build both, test against Mach-O, and package up the linux executable.
                -->
                <!-- Delay creating as we won't be using this in ITs -->
                <!-- This shares the same phase as the install plugin, need to ensure install happens after this one -->
                <lambda-native.phase>install</lambda-native.phase>
                <!-- Run this instead to use it in integration tests -->
                <lambda-native-it.phase>package</lambda-native-it.phase>
                <!-- Build linux executable using Docker container -->
                <lambda-native.container-build>true</lambda-native.container-build>
                <!-- Run IT against separate native executable -->
                <native.image.path.it>runner-it</native.image.path.it>
                <!-- Run the build of native executable for testing -->
                <lambda-native-it.skip>false</lambda-native-it.skip>
                <failsafe.native-image-path>${project.build.directory}/${lambda-native-it.finalName}-runner
                </failsafe.native-image-path>
            </properties>
        </profile>
        <profile>
            <id>macos-skipTests</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
                <property>
                    <name>!skipTests</name>
                </property>
            </activation>
            <properties>
                <!-- When tests are skipped, use original phase -->
                <lambda-native.phase>package</lambda-native.phase>
            </properties>
        </profile>
        <profile>
            <id>macos-skipITs</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
                <property>
                    <name>!skipITs</name>
                </property>
            </activation>
            <properties>
                <!-- When tests are skipped, use original phase -->
                <lambda-native.phase>package</lambda-native.phase>
            </properties>
        </profile>
    </profiles>
</project>
