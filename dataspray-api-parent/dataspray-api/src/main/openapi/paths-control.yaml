components:
  schemas:
    UploadCodeRequest:
      type: object
      required:
        - taskId
        - contentLengthBytes
      properties:
        taskId:
          type: string
        contentLengthBytes:
          type: integer
          format: int64
    UploadCodeResponse:
      type: object
      required:
        - presignedUrl
        - codeUrl
      properties:
        presignedUrl:
          type: string
        codeUrl:
          type: string
    DeployRequest:
      type: object
      required:
        - codeUrl
        - handler
        - inputQueueNames
        - outputQueueNames
        - switchToNow
      properties:
        codeUrl:
          type: string
        handler:
          type: string
        inputQueueNames:
          type: array
          items:
            type: string
        outputQueueNames:
          type: array
          items:
            type: string
        runtime:
          type: string
          # Subset of software.amazon.awssdk.services.lambda.model.Runtime
          enum:
            - JAVA21
            - NODEJS20_X
        endpoint:
          $ref: '#/components/schemas/DeployRequestEndpoint'
        dynamoState:
          $ref: '#/components/schemas/DeployRequestDynamoState'
        switchToNow:
          type: boolean
    DeployRequestEndpoint:
      type: object
      required:
        - isPublic
      properties:
        isPublic:
          type: boolean
        cors:
          $ref: '#/components/schemas/DeployRequestEndpointCors'
    DeployRequestEndpointCors:
      type: object
      required:
        - allowOrigins
        - allowMethods
        - allowHeaders
        - exposeHeaders
        - allowCredentials
        - maxAge
      properties:
        allowOrigins:
          type: array
          items:
            type: string
        allowMethods:
          type: array
          items:
            type: string
        allowHeaders:
          type: array
          items:
            type: string
        exposeHeaders:
          type: array
          items:
            type: string
        allowCredentials:
          type: boolean
        maxAge:
          type: integer
          format: int64
    DeployRequestDynamoState:
      type: object
      required:
        - lsiCount
        - gsiCount
      properties:
        lsiCount:
          type: integer
          format: int64
          maximum: 10
        gsiCount:
          type: integer
          format: int64
          maximum: 10
    TaskVersions:
      type: object
      required:
        - status
        - versions
      properties:
        status:
          $ref: '#/components/schemas/TaskStatus'
        versions:
          type: array
          items:
            $ref: '#/components/schemas/TaskVersion'
        endpointUrl:
          type: string
    TaskVersion:
      type: object
      required:
        - taskId
        - version
        - description
      properties:
        taskId:
          type: string
        version:
          type: string
        description:
          type: string
    TaskStatuses:
      type: object
      required:
        - tasks
      properties:
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskStatus'
        cursor:
          type: string
    TaskStatus:
      type: object
      required:
        - taskId
        - status
      properties:
        taskId:
          type: string
        version:
          type: string
        status:
          type: string
          enum:
            - CREATING
            - STARTING
            - UPDATING
            - RUNNING
            - PAUSING
            - PAUSED
            - NOTFOUND
        lastUpdateStatus:
          type: string
          # Matches software.amazon.awssdk.services.lambda.model.LastUpdateStatus
          enum:
            - SUCCESSFUL
            - FAILED
            - IN_PROGRESS
        lastUpdateStatusReason:
          type: string
        endpointUrl:
          type: string
    Topics:
      type: object
      required:
        - organizationName
        - allowUndefinedTopics
        - topics
      properties:
        organizationName:
          type: string
        allowUndefinedTopics:
          type: boolean
        undefinedTopic:
          $ref: '#/components/schemas/Topic'
        topics:
          type: array
          items:
            $ref: '#/components/schemas/Topic'
    Topic:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        batch:
          $ref: '#/components/schemas/TopicBatch'
        streams:
          type: array
          items:
            $ref: '#/components/schemas/TopicStream'
    TopicBatch:
      type: object
      properties:
        retentionInDays:
          type: integer
          format: int64
    TopicStream:
      type: object
      required:
        - name
      properties:
        name:
          type: string

/v1/organization/{organizationName}/control/code/upload:
  put:
    operationId: uploadCode
    tags: [ Control ]
    parameters:
      - name: organizationName
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UploadCodeRequest'
    responses:
      '200':
        description: Ok
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadCodeResponse'

/v1/organization/{organizationName}/control/status:
  get:
    operationId: statusAll
    tags: [ Control ]
    parameters:
      - name: organizationName
        in: path
        required: true
        schema:
          type: string
      - name: cursor
        in: query
        schema:
          type: string
    responses:
      '200':
        description: Ok
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStatuses'
/v1/organization/{organizationName}/control/task/{taskId}/status/:
  get:
    operationId: status
    tags: [ Control ]
    parameters:
      - name: organizationName
        in: path
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Ok
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStatus'
/v1/organization/{organizationName}/control/task/{taskId}/deploy:
  patch:
    operationId: deployVersion
    tags: [ Control ]
    parameters:
      - name: organizationName
        in: path
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeployRequest'
    responses:
      '200':
        description: Ok
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskVersion'
/v1/organization/{organizationName}/control/task/{taskId}/versions:
  get:
    operationId: getVersions
    tags: [ Control ]
    parameters:
      - name: organizationName
        in: path
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Ok
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskVersions'
/v1/organization/{organizationName}/control/task/{taskId}/activate:
  patch:
    operationId: activateVersion
    tags: [ Control ]
    parameters:
      - name: organizationName
        in: path
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        required: true
        schema:
          type: string
      - name: version
        in: query
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Ok
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStatus'
/v1/organization/{organizationName}/control/task/{taskId}/pause:
  patch:
    operationId: pause
    tags: [ Control ]
    parameters:
      - name: organizationName
        in: path
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Ok
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStatus'
/v1/organization/{organizationName}/control/task/{taskId}/resume:
  patch:
    operationId: resume
    tags: [ Control ]
    parameters:
      - name: organizationName
        in: path
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Ok
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStatus'
/v1/organization/{organizationName}/control/task/{taskId}/delete:
  delete:
    operationId: delete
    tags: [ Control ]
    parameters:
      - name: organizationName
        in: path
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Ok
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStatus'


/v1/organization/{organizationName}/topics:
  get:
    operationId: getTopics
    tags: [ Control ]
    parameters:
      - name: organizationName
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Ok
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topics'
